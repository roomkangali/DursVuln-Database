[
  {"id":"CVE-2024-4316","product":"postgresql","summary":"PostgreSQL's pg_stats_ext and pg_stats_ext_exprs views, part of the built-in `stats_ext` extension, use the `pg_get_expr()` function to display expression statistics. This function requires `SELECT` privilege on the referenced table, but the views did not check this privilege. This allows a user with `SELECT` privilege on the `pg_stats_ext` or `pg_stats_ext_exprs` view, but not on the table, to read the expressions used in its statistics objects. This could reveal sensitive information, such as the conditions in a `WHERE` clause. This vulnerability is present in versions 16 to 16.2, 15 to 15.6, 14 to 14.11, 13 to 13.14, and 12 to 12.18.","details":"PostgreSQL's pg_stats_ext and pg_stats_ext_exprs views, part of the built-in `stats_ext` extension, use the `pg_get_expr()` function to display expression statistics. This function requires `SELECT` privilege on the referenced table, but the views did not check this privilege. This allows a user with `SELECT` privilege on the `pg_stats_ext` or `pg_stats_ext_exprs` view, but not on the table, to read the expressions used in its statistics objects. This could reveal sensitive information, such as the conditions in a `WHERE` clause. This vulnerability is present in versions 16 to 16.2, 15 to 15.6, 14 to 14.11, 13 to 13.14, and 12 to 12.18.","references":["[https://nvd.nist.gov/vuln/detail/CVE-2024-4316](https://nvd.nist.gov/vuln/detail/CVE-2024-4316)"],"severity":"LOW","match_type":"version_range","confidence":"high","version_match":[[">=12.0","<12.19"],[">=13.0","<13.15"],[">=14.0","<14.12"],["<15.7",">=15.0"],[">=16.0","<16.3"]]},
  {"id":"CVE-2024-0985","product":"postgresql","summary":"In PostgreSQL, when `REINDEX CONCURRENTLY` processes an index that has been marked `INDISINVALID`, it may fail to build the new index correctly. This can lead to the new index having entries that it should not have, or missing entries that it should have. If this occurs, queries that use the affected index may return incorrect results. This vulnerability is present in versions 13 to 13.13, 14 to 14.10, 15 to 15.5, and 16 to 16.1.","details":"In PostgreSQL, when `REINDEX CONCURRENTLY` processes an index that has been marked `INDISINVALID`, it may fail to build the new index correctly. This can lead to the new index having entries that it should not have, or missing entries that it should have. If this occurs, queries that use the affected index may return incorrect results. This vulnerability is present in versions 13 to 13.13, 14 to 14.10, 15 to 15.5, and 16 to 16.1.","references":["[https://nvd.nist.gov/vuln/detail/CVE-2024-0985](https://nvd.nist.gov/vuln/detail/CVE-2024-0985)"],"severity":"MEDIUM","match_type":"version_range","confidence":"high","version_match":[["<13.14",">=13.0"],["<14.11",">=14.0"],["<15.6",">=15.0"],[">=16.0","<16.2"]]},
  {"id":"CVE-2023-5869","product":"postgresql","summary":"PostgreSQL is vulnerable to a buffer overflow when processing specially crafted SQL statements that use aggregates on `unknown`-type values. An authenticated database user can execute a statement that causes a buffer overflow, leading to a server crash. In theory, this could also be exploited for arbitrary code execution on the server. This vulnerability is present in versions 12 to 12.16, 13 to 13.12, 14 to 14.9, 15 to 15.4, and 16 to 16.0.","details":"PostgreSQL is vulnerable to a buffer overflow when processing specially crafted SQL statements that use aggregates on `unknown`-type values. An authenticated database user can execute a statement that causes a buffer overflow, leading to a server crash. In theory, this could also be exploited for arbitrary code execution on the server. This vulnerability is present in versions 12 to 12.16, 13 to 13.12, 14 to 14.9, 15 to 15.4, and 16 to 16.0.","references":["[https://nvd.nist.gov/vuln/detail/CVE-2023-5869](https://nvd.nist.gov/vuln/detail/CVE-2023-5869)"],"severity":"HIGH","match_type":"version_range","confidence":"high","version_match":[[">=12.0","<12.17"],[">=13.0","<13.13"],["<14.10",">=14.0"],[">=15.0","<15.5"],["=16.0"]]},
  {"id":"CVE-2023-5870","product":"postgresql","summary":"In PostgreSQL, roles can be members of other roles. The `pg_has_role()` function checks for these memberships. However, it did not correctly handle `PUBLIC` pseudo-role, which could lead to incorrect authorization checks in some cases. Specifically, if a user writes a security-definer function that uses `pg_has_role()` to check for `PUBLIC` membership, it could be fooled into granting permissions incorrectly. This vulnerability is present in all supported versions.","details":"In PostgreSQL, roles can be members of other roles. The `pg_has_role()` function checks for these memberships. However, it did not correctly handle `PUBLIC` pseudo-role, which could lead to incorrect authorization checks in some cases. Specifically, if a user writes a security-definer function that uses `pg_has_role()` to check for `PUBLIC` membership, it could be fooled into granting permissions incorrectly. This vulnerability is present in all supported versions.","references":["[https://nvd.nist.gov/vuln/detail/CVE-2023-5870](https://nvd.nist.gov/vuln/detail/CVE-2023-5870)"],"severity":"MEDIUM","match_type":"version_range","confidence":"high","version_match":[[">=12.0","<12.17"],[">=13.0","<13.13"],["<14.10",">=14.0"],[">=15.0","<15.5"],[">=16.0","<16.1"]]},
  {"id":"CVE-2023-39417","product":"postgresql","summary":"In PostgreSQL, when using the `MERGE` command, some policies for row-level security were not correctly enforced. If a user has `UPDATE` and `INSERT` privileges on a table with row-level security policies, they could use a `MERGE` statement to move a row from a policy-protected part of the table to a non-protected part. This could allow the user to access or modify data they should not be able to. This vulnerability is present in versions 15 to 15.3.","details":"In PostgreSQL, when using the `MERGE` command, some policies for row-level security were not correctly enforced. If a user has `UPDATE` and `INSERT` privileges on a table with row-level security policies, they could use a `MERGE` statement to move a row from a policy-protected part of the table to a non-protected part. This could allow the user to access or modify data they should not be able to. This vulnerability is present in versions 15 to 15.3.","references":["[https://nvd.nist.gov/vuln/detail/CVE-2023-39417](https://nvd.nist.gov/vuln/detail/CVE-2023-39417)"],"severity":"MEDIUM","match_type":"version_range","confidence":"high","version_match":[">=15.0","<15.4"]}
]
